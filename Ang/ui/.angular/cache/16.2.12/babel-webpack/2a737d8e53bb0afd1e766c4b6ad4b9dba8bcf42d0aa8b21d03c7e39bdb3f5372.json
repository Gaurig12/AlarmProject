{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ReadComponent = class ReadComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.alarms = []; // Initialize with an empty array\n  }\n\n  ngOnInit() {\n    this.dataService.getData().subscribe(data => {\n      this.databaseData = data;\n    });\n  }\n  showDetails(item) {\n    this.databaseData.forEach(data => {\n      if (data !== item) {\n        data.showDetails = false; // Hide details of other rows\n      }\n    });\n\n    item.showDetails = !item.showDetails; // Toggle details for the clicked row\n    this.selectedItem = item.showDetails ? item : null;\n  }\n  editAlarm(alarm) {\n    // Here you can implement logic to open an edit form or dialog for the selected alarm\n    console.log('Editing alarm:', alarm);\n  }\n  deleteAlarm(id) {\n    if (confirm('Are you sure you want to delete this alarm?')) {\n      this.dataService.deleteAlarm(id).subscribe(() => {\n        // Remove the deleted alarm from the local array\n        this.alarms = this.alarms.filter(a => a.id !== id);\n        console.log('Alarm deleted successfully');\n      }, error => {\n        console.error('Error deleting alarm:', error);\n        // Optionally, display an error message to the user\n      });\n    }\n  }\n};\n\nReadComponent = __decorate([Component({\n  selector: 'app-read',\n  templateUrl: './read.component.html',\n  styleUrls: ['./read.component.css']\n})], ReadComponent);\nexport { ReadComponent };","map":{"version":3,"names":["Component","ReadComponent","constructor","dataService","alarms","ngOnInit","getData","subscribe","data","databaseData","showDetails","item","forEach","selectedItem","editAlarm","alarm","console","log","deleteAlarm","id","confirm","filter","a","error","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\AMBUJ\\AMBUJ\\COLLEGE\\GG\\alarm-demo-main\\Ang\\ui\\src\\app\\read\\read.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Alarm } from '../app.model';\n\n@Component({\n  selector: 'app-read',\n  templateUrl: './read.component.html',\n  styleUrls: ['./read.component.css']\n})\n\nexport class ReadComponent {\n   alarms: Alarm[] = []; // Initialize with an empty array\n public databaseData: any;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit(): void {\n    this.dataService.getData().subscribe(data => {\n      this.databaseData = data;\n    });\n  }\n selectedItem: any;\n  showDetails(item: any): void {\n    this.databaseData.forEach(data => {\n      if (data !== item) {\n        data.showDetails = false; // Hide details of other rows\n      }\n    });\n    item.showDetails = !item.showDetails; // Toggle details for the clicked row\n    this.selectedItem = item.showDetails ? item : null;\n}\n editAlarm(alarm: Alarm): void {\n    // Here you can implement logic to open an edit form or dialog for the selected alarm\n    console.log('Editing alarm:', alarm);\n  }\n\n  deleteAlarm(id: number): void {\n    if (confirm('Are you sure you want to delete this alarm?')) {\n      this.dataService.deleteAlarm(id).subscribe(() => {\n        // Remove the deleted alarm from the local array\n        this.alarms = this.alarms.filter(a => a.id !== id);\n        console.log('Alarm deleted successfully');\n      }, error => {\n        console.error('Error deleting alarm:', error);\n        // Optionally, display an error message to the user\n      });\n    }\n}}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAUjD,IAAaC,aAAa,GAA1B,MAAaA,aAAa;EAIxBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH9B,KAAAC,MAAM,GAAY,EAAE,CAAC,CAAC;EAGwB;;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACF,WAAW,CAACG,OAAO,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC1C,IAAI,CAACC,YAAY,GAAGD,IAAI;IAC1B,CAAC,CAAC;EACJ;EAEAE,WAAWA,CAACC,IAAS;IACnB,IAAI,CAACF,YAAY,CAACG,OAAO,CAACJ,IAAI,IAAG;MAC/B,IAAIA,IAAI,KAAKG,IAAI,EAAE;QACjBH,IAAI,CAACE,WAAW,GAAG,KAAK,CAAC,CAAC;;IAE9B,CAAC,CAAC;;IACFC,IAAI,CAACD,WAAW,GAAG,CAACC,IAAI,CAACD,WAAW,CAAC,CAAC;IACtC,IAAI,CAACG,YAAY,GAAGF,IAAI,CAACD,WAAW,GAAGC,IAAI,GAAG,IAAI;EACtD;EACCG,SAASA,CAACC,KAAY;IACnB;IACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,KAAK,CAAC;EACtC;EAEAG,WAAWA,CAACC,EAAU;IACpB,IAAIC,OAAO,CAAC,6CAA6C,CAAC,EAAE;MAC1D,IAAI,CAACjB,WAAW,CAACe,WAAW,CAACC,EAAE,CAAC,CAACZ,SAAS,CAAC,MAAK;QAC9C;QACA,IAAI,CAACH,MAAM,GAAG,IAAI,CAACA,MAAM,CAACiB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC;QAClDH,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MAC3C,CAAC,EAAEM,KAAK,IAAG;QACTP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C;MACF,CAAC,CAAC;;EAER;CAAE;;AArCWtB,aAAa,GAAAuB,UAAA,EANzBxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EAEW1B,aAAa,CAqCxB;SArCWA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}