{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"@angular/common\";\nfunction ReadComponent_div_0_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate4(\" \", item_r2.id, \" \", item_r2.name, \" \", item_r2.status, \" \", item_r2.depth, \" \");\n  }\n}\nfunction ReadComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Data from PostgreSQL Database\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, ReadComponent_div_0_li_4_Template, 2, 4, \"li\", 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.databaseData);\n  }\n}\nclass ReadComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n  }\n  ngOnInit() {\n    this.dataService.getData().subscribe(data => {\n      this.databaseData = data;\n    });\n  }\n  static #_ = this.ɵfac = function ReadComponent_Factory(t) {\n    return new (t || ReadComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReadComponent,\n    selectors: [[\"app-read\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function ReadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ReadComponent_div_0_Template, 5, 1, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.databaseData);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { ReadComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate4","item_r2","id","name","status","depth","ɵɵtemplate","ReadComponent_div_0_li_4_Template","ɵɵproperty","ctx_r0","databaseData","ReadComponent","constructor","dataService","ngOnInit","getData","subscribe","data","_","ɵɵdirectiveInject","i1","DataService","_2","selectors","decls","vars","consts","template","ReadComponent_Template","rf","ctx","ReadComponent_div_0_Template"],"sources":["D:\\AMBUJ\\AMBUJ\\COLLEGE\\GG\\alarm-demo-main\\Ang\\ui\\src\\app\\read\\read.component.ts","D:\\AMBUJ\\AMBUJ\\COLLEGE\\GG\\alarm-demo-main\\Ang\\ui\\src\\app\\read\\read.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n\n\n@Component({\n  selector: 'app-read',\n  templateUrl: './read.component.html',\n  styleUrls: ['./read.component.css']\n})\n\n\nexport class ReadComponent {\n public databaseData: any;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit(): void {\n    this.dataService.getData().subscribe(data => {\n      this.databaseData = data;\n    });\n  }\n}\n    \n\n\n","<div *ngIf=\"databaseData\">\n    <h2>Data from PostgreSQL Database</h2>\n    <ul>\n        <li *ngFor=\"let item of databaseData\">\n            {{ item.id }} {{item.name}} {{item.status}} {{item.depth}}\n            <!-- Display other properties as needed -->\n        </li>\n    </ul>\n</div>"],"mappings":";;;;;ICGQA,EAAA,CAAAC,cAAA,SAAsC;IAClCD,EAAA,CAAAE,MAAA,GACA;IACJF,EAAA,CAAAG,YAAA,EAAK;;;;IAFDH,EAAA,CAAAI,SAAA,GACA;IADAJ,EAAA,CAAAK,kBAAA,MAAAC,OAAA,CAAAC,EAAA,OAAAD,OAAA,CAAAE,IAAA,OAAAF,OAAA,CAAAG,MAAA,OAAAH,OAAA,CAAAI,KAAA,MACA;;;;;IALZV,EAAA,CAAAC,cAAA,UAA0B;IAClBD,EAAA,CAAAE,MAAA,oCAA6B;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACtCH,EAAA,CAAAC,cAAA,SAAI;IACAD,EAAA,CAAAW,UAAA,IAAAC,iCAAA,gBAGK;IACTZ,EAAA,CAAAG,YAAA,EAAK;;;;IAJoBH,EAAA,CAAAI,SAAA,GAAe;IAAfJ,EAAA,CAAAa,UAAA,YAAAC,MAAA,CAAAC,YAAA,CAAe;;;ADC5C,MAOaC,aAAa;EAGxBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACD,WAAW,CAACE,OAAO,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC1C,IAAI,CAACP,YAAY,GAAGO,IAAI;IAC1B,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBATUP,aAAa,EAAAhB,EAAA,CAAAwB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbX,aAAa;IAAAY,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX1BlC,EAAA,CAAAW,UAAA,IAAAyB,4BAAA,iBAQM;;;QARApC,EAAA,CAAAa,UAAA,SAAAsB,GAAA,CAAApB,YAAA,CAAkB;;;;;;;SDWXC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}