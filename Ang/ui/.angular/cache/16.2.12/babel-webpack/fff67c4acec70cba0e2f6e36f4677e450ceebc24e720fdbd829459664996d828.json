{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AlarmComponent_div_1_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function AlarmComponent_div_1_div_7_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const alarm_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.editAlarm(alarm_r3));\n    });\n    i0.ɵɵelementStart(1, \"div\", 13)(2, \"div\", 14);\n    i0.ɵɵtext(3, \"P1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 15)(5, \"h2\", 16);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"h4\", 17);\n    i0.ɵɵtext(8, \"Downhole PT Tubing\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const alarm_r3 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(alarm_r3.name);\n  }\n}\nfunction AlarmComponent_div_1_ng_container_32_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"h2\");\n    i0.ɵɵtext(2, \"Edit Alarm\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 20, 21);\n    i0.ɵɵlistener(\"ngSubmit\", function AlarmComponent_div_1_ng_container_32_div_1_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r9.submitEditForm());\n    });\n    i0.ɵɵelementStart(5, \"div\")(6, \"label\", 22);\n    i0.ɵɵtext(7, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function AlarmComponent_div_1_ng_container_32_div_1_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r11.selectedAlarm.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\")(10, \"label\", 24);\n    i0.ɵɵtext(11, \"Phase:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function AlarmComponent_div_1_ng_container_32_div_1_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r12.selectedAlarm.phase = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\")(14, \"label\", 26);\n    i0.ɵɵtext(15, \"Well:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 27);\n    i0.ɵɵlistener(\"ngModelChange\", function AlarmComponent_div_1_ng_container_32_div_1_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r13 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r13.selectedAlarm.well = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"button\", 28);\n    i0.ɵɵtext(18, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AlarmComponent_div_1_ng_container_32_div_1_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r14 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r14.cancelEdit());\n    });\n    i0.ɵɵtext(20, \"Cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.selectedAlarm.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.selectedAlarm.phase);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.selectedAlarm.well);\n  }\n}\nfunction AlarmComponent_div_1_ng_container_32_table_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\")(1, \"tr\")(2, \"td\")(3, \"p\");\n    i0.ɵɵtext(4, \"Issue Status: \");\n    i0.ɵɵelementStart(5, \"span\", 30);\n    i0.ɵɵtext(6, \"Inactive\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8, \"Issue ID: \");\n    i0.ɵɵelementStart(9, \"span\", 30);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"p\");\n    i0.ɵɵtext(12, \"Issue Type: \");\n    i0.ɵɵelementStart(13, \"span\", 30);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"p\");\n    i0.ɵɵtext(16, \"Phase: \");\n    i0.ɵɵelementStart(17, \"span\", 30);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"p\");\n    i0.ɵɵtext(20, \"Issue Level: \");\n    i0.ɵɵelementStart(21, \"span\", 30);\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(23, \"tr\")(24, \"td\")(25, \"p\");\n    i0.ɵɵtext(26, \"Storage Project: \");\n    i0.ɵɵelementStart(27, \"span\", 30);\n    i0.ɵɵtext(28);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"p\");\n    i0.ɵɵtext(30, \"Well: \");\n    i0.ɵɵelementStart(31, \"span\", 30);\n    i0.ɵɵtext(32);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(33, \"p\");\n    i0.ɵɵtext(34, \"Service Provider: \");\n    i0.ɵɵelementStart(35, \"span\", 30);\n    i0.ɵɵtext(36);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(37, \"tr\")(38, \"td\")(39, \"p\");\n    i0.ɵɵtext(40, \"Total Depth: \");\n    i0.ɵɵelementStart(41, \"span\", 30);\n    i0.ɵɵtext(42);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(43, \"p\");\n    i0.ɵɵtext(44, \"Injection Depth Range: \");\n    i0.ɵɵelementStart(45, \"span\", 30);\n    i0.ɵɵtext(46);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(47, \"p\");\n    i0.ɵɵtext(48, \"Telecom Sys Status: \");\n    i0.ɵɵelementStart(49, \"span\", 30);\n    i0.ɵɵtext(50);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate(ctx_r7.selectedAlarm.id);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r7.selectedAlarm.type);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r7.selectedAlarm.phase);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r7.selectedAlarm.level);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r7.selectedAlarm.project);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r7.selectedAlarm.well);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r7.selectedAlarm.sprovider);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r7.selectedAlarm.depth);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r7.selectedAlarm.indepth);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r7.selectedAlarm.systatus);\n  }\n}\nfunction AlarmComponent_div_1_ng_container_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AlarmComponent_div_1_ng_container_32_div_1_Template, 21, 3, \"div\", 18);\n    i0.ɵɵtemplate(2, AlarmComponent_div_1_ng_container_32_table_2_Template, 51, 10, \"table\", 0);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showEditForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.showEditForm);\n  }\n}\nfunction AlarmComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n    i0.ɵɵtext(4, \"My Alarms\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6, \"Filter\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, AlarmComponent_div_1_div_7_Template, 9, 1, \"div\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 4)(9, \"h2\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\");\n    i0.ɵɵtext(12, \"Downhole PT Tubing\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 5)(14, \"h2\");\n    i0.ɵɵtext(15, \"Review and acknowledge the issue\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"p\");\n    i0.ɵɵtext(17, \"04/26/2022\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \" A decrease in pressure required to inject into the reservoir was found, falling below the expected range. \");\n    i0.ɵɵelement(19, \"img\", 6);\n    i0.ɵɵelementStart(20, \"h5\");\n    i0.ɵɵtext(21, \"Previous Activity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"img\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 8)(24, \"div\", 4)(25, \"div\", 9)(26, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AlarmComponent_div_1_Template_button_click_26_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.toggleEditForm());\n    });\n    i0.ɵɵelementStart(27, \"span\");\n    i0.ɵɵtext(28, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function AlarmComponent_div_1_Template_button_click_29_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.deleteAlarm(ctx_r17.selectedAlarm == null ? null : ctx_r17.selectedAlarm.id));\n    });\n    i0.ɵɵelementStart(30, \"span\");\n    i0.ɵɵtext(31, \"Delete\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(32, AlarmComponent_div_1_ng_container_32_Template, 3, 2, \"ng-container\", 0);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.alarms);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.selectedAlarm == null ? null : ctx_r0.selectedAlarm.name);\n    i0.ɵɵadvance(22);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.selectedAlarm);\n  }\n}\nclass AlarmComponent {\n  constructor(AlarmService) {\n    this.AlarmService = AlarmService;\n    this.alarms = []; // Initialize with an empty array\n    this.selectedAlarm = null; // Initialize selectedAlarm as null\n    this.showEditForm = false;\n  }\n  ngOnInit() {\n    this.loadAlarms();\n  }\n  loadAlarms() {\n    this.AlarmService.getAlarms().subscribe(alarms => {\n      this.alarms = alarms;\n      console.log('Alarms:', alarms); // Add a console.log statement to check if alarms are received\n    }, error => {\n      console.error('Error loading alarms:', error);\n    });\n  }\n  editAlarm(alarm) {\n    this.selectedAlarm = alarm;\n    this.showEditForm = false; // Close edit form when selecting a new alarm\n  }\n\n  toggleEditForm() {\n    this.showEditForm = !this.showEditForm;\n  }\n  submitEditForm() {\n    if (this.selectedAlarm) {\n      const scrollPosition = window.pageYOffset;\n      this.AlarmService.updateAlarm(this.selectedAlarm).subscribe(updatedAlarm => {\n        const index = this.alarms.findIndex(a => a.id === updatedAlarm.id);\n        if (index !== -1) {\n          this.alarms[index] = updatedAlarm;\n        }\n        console.log('Alarm updated successfully');\n        this.selectedAlarm = null;\n        this.showEditForm = false;\n        window.scrollTo(0, scrollPosition); // Maintain scroll position\n      }, error => {\n        console.error('Error updating alarm:', error);\n      });\n    }\n  }\n  cancelEdit() {\n    this.selectedAlarm = null;\n    this.showEditForm = false;\n  }\n  deleteAlarm(id) {\n    if (confirm('Are you sure you want to delete this alarm?')) {\n      this.AlarmService.deleteAlarm(id).subscribe(() => {\n        // Remove the deleted alarm from the local array\n        this.alarms = this.alarms.filter(a => a.id !== id);\n        console.log('Alarm deleted successfully');\n      }, error => {\n        console.error('Error deleting alarm:', error);\n        // Optionally, display an error message to the user\n      });\n    }\n  }\n  static #_ = this.ɵfac = function AlarmComponent_Factory(t) {\n    return new (t || AlarmComponent)(i0.ɵɵdirectiveInject(i1.AlarmService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AlarmComponent,\n    selectors: [[\"app-read\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"row\"], [1, \"column1\"], [\"class\", \"button-table\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"column2\"], [1, \"comp1\"], [\"src\", \"assets/ss1.jpg\", \"alt\", \"SS1 Image\"], [\"src\", \"assets/ss2.jpg\", \"alt\", \"SS1 Image\"], [1, \"comp2\"], [1, \"topright\"], [1, \"edit-btn\", 3, \"click\"], [1, \"delete-btn\", 3, \"click\"], [1, \"button-table\", 3, \"click\"], [1, \"button-cell\"], [1, \"button-index\"], [1, \"button-info\"], [1, \"button-name\"], [1, \"button-subheading\"], [\"class\", \"edit-form\", 4, \"ngIf\"], [1, \"edit-form\"], [3, \"ngSubmit\"], [\"editForm\", \"ngForm\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"phase\"], [\"type\", \"text\", \"id\", \"phase\", \"name\", \"phase\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"well\"], [\"type\", \"text\", \"id\", \"well\", \"name\", \"well\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"type\", \"button\", 3, \"click\"], [1, \"plain-text\"]],\n    template: function AlarmComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"body\");\n        i0.ɵɵtemplate(1, AlarmComponent_div_1_Template, 33, 3, \"div\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.alarms);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 699:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(319:1) D:\\\\\\\\AMBUJ\\\\\\\\AMBUJ\\\\\\\\COLLEGE\\\\\\\\GG\\\\\\\\alarm-demo-main\\\\\\\\Ang\\\\\\\\ui\\\\\\\\src\\\\\\\\app\\\\\\\\read\\\\\\\\read.component.css Unclosed block\\\\n\\\\n \\\\u001b[90m 317 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 318 | \\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 319 | \\\\u001b[39m\\\\u001b[33m.edit-btn\\\\u001b[39m span, \\\\u001b[33m.delete-btn\\\\u001b[39m span \\\\u001b[33m{\\\\u001b[39m\\\\n \\\\u001b[90m     | \\\\u001b[39m\\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 320 | \\\\u001b[39m    cursor\\\\u001b[33m:\\\\u001b[39m pointer\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 321 | \\\\u001b[39m    display\\\\u001b[33m:\\\\u001b[39m inline\\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[699]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=read.component.css.map*/\"]\n  });\n}\nexport { AlarmComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","AlarmComponent_div_1_div_7_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","_r5","alarm_r3","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","editAlarm","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","name","AlarmComponent_div_1_ng_container_32_div_1_Template_form_ngSubmit_3_listener","_r10","ctx_r9","submitEditForm","AlarmComponent_div_1_ng_container_32_div_1_Template_input_ngModelChange_8_listener","$event","ctx_r11","selectedAlarm","AlarmComponent_div_1_ng_container_32_div_1_Template_input_ngModelChange_12_listener","ctx_r12","phase","AlarmComponent_div_1_ng_container_32_div_1_Template_input_ngModelChange_16_listener","ctx_r13","well","AlarmComponent_div_1_ng_container_32_div_1_Template_button_click_19_listener","ctx_r14","cancelEdit","ɵɵproperty","ctx_r6","ctx_r7","id","type","level","project","sprovider","depth","indepth","systatus","ɵɵelementContainerStart","ɵɵtemplate","AlarmComponent_div_1_ng_container_32_div_1_Template","AlarmComponent_div_1_ng_container_32_table_2_Template","ɵɵelementContainerEnd","ctx_r2","showEditForm","AlarmComponent_div_1_div_7_Template","ɵɵelement","AlarmComponent_div_1_Template_button_click_26_listener","_r16","ctx_r15","toggleEditForm","AlarmComponent_div_1_Template_button_click_29_listener","ctx_r17","deleteAlarm","AlarmComponent_div_1_ng_container_32_Template","ctx_r0","alarms","AlarmComponent","constructor","AlarmService","ngOnInit","loadAlarms","getAlarms","subscribe","console","log","error","alarm","scrollPosition","window","pageYOffset","updateAlarm","updatedAlarm","index","findIndex","a","scrollTo","confirm","filter","_","ɵɵdirectiveInject","i1","_2","selectors","decls","vars","consts","template","AlarmComponent_Template","rf","ctx","AlarmComponent_div_1_Template"],"sources":["D:\\AMBUJ\\AMBUJ\\COLLEGE\\GG\\alarm-demo-main\\Ang\\ui\\src\\app\\read\\read.component.ts","D:\\AMBUJ\\AMBUJ\\COLLEGE\\GG\\alarm-demo-main\\Ang\\ui\\src\\app\\read\\read.component.html"],"sourcesContent":["// import { Component, OnInit } from '@angular/core';\n// import { AlarmService } from '../data.service';\n// import { Alarm } from '../app.model';\n\n// @Component({\n//   selector: 'app-read',\n//   templateUrl: './read.component.html',\n//   styleUrls: ['./read.component.css']\n// })\n\n// export class ReadComponent {\n//    alarms: Alarm[] = []; // Initialize with an empty array\n//  public databaseData: any;\n\n//   constructor(private AlarmService: AlarmService) {}\n\n//   ngOnInit(): void {\n//     this.AlarmService.getData().subscribe(data => {\n//       this.databaseData = data;\n//     });\n//   }\n//  selectedItem: any;\n//   showDetails(item: any): void {\n//     this.databaseData.forEach(data => {\n//       if (data !== item) {\n//         data.showDetails = false; // Hide details of other rows\n//       }\n//     });\n//     item.showDetails = !item.showDetails; // Toggle details for the clicked row\n//     this.selectedItem = item.showDetails ? item : null;\n// }\n//  editAlarm(alarm: Alarm): void {\n//     // Here you can implement logic to open an edit form or dialog for the selected alarm\n//     console.log('Editing alarm:', alarm);\n//   }\n\n//   deleteAlarm(id: number): void {\n//     if (confirm('Are you sure you want to delete this alarm?')) {\n//       this.AlarmService.deleteAlarm(id).subscribe(() => {\n//         // Remove the deleted alarm from the local array\n//         this.alarms = this.alarms.filter(a => a.id !== id);\n//         console.log('Alarm deleted successfully');\n//       }, error => {\n//         console.error('Error deleting alarm:', error);\n//         // Optionally, display an error message to the user\n//       });\n//     }\n// }}\nimport { Component, OnInit } from '@angular/core';\nimport { Alarm } from '../app.model';\nimport { AlarmService } from '../data.service';\n\n@Component({\n  selector: 'app-read',\n  templateUrl: './read.component.html',\n  styleUrls: ['./read.component.css']\n})\nexport class AlarmComponent  implements OnInit {\n  alarms: Alarm[] = []; // Initialize with an empty array\n  selectedAlarm: Alarm | null = null; // Initialize selectedAlarm as null\n  showEditForm = false;\n  constructor(private AlarmService: AlarmService) { }\n\n  ngOnInit(): void {\n    this.loadAlarms();\n  }\n\n  loadAlarms(): void {\n    this.AlarmService.getAlarms().subscribe(\n      (alarms: Alarm[]) => {\n        this.alarms = alarms;\n        console.log('Alarms:', alarms); // Add a console.log statement to check if alarms are received\n      },\n      (error) => {\n        console.error('Error loading alarms:', error);\n      }\n    );\n  }\n  \n\n  editAlarm(alarm: Alarm): void {\n    this.selectedAlarm = alarm;\n    this.showEditForm = false; // Close edit form when selecting a new alarm\n  }\n\n  toggleEditForm(): void {\n    this.showEditForm = !this.showEditForm;\n  }\n\n  submitEditForm(): void {\n    if (this.selectedAlarm) {\n      const scrollPosition = window.pageYOffset;\n      this.AlarmService.updateAlarm(this.selectedAlarm).subscribe(\n        (updatedAlarm: Alarm) => {\n          const index = this.alarms.findIndex(a => a.id === updatedAlarm.id);\n          if (index !== -1) {\n            this.alarms[index] = updatedAlarm;\n          }\n          console.log('Alarm updated successfully');\n          this.selectedAlarm = null;\n          this.showEditForm = false;\n          window.scrollTo(0, scrollPosition); // Maintain scroll position\n        },\n        (error) => {\n          console.error('Error updating alarm:', error);\n        }\n      );\n    }\n  }\n  \n\n  cancelEdit(): void {\n    this.selectedAlarm = null;\n    this.showEditForm = false;\n  }\n\n\n  deleteAlarm(id: number): void {\n    if (confirm('Are you sure you want to delete this alarm?')) {\n      this.AlarmService.deleteAlarm(id).subscribe(() => {\n        // Remove the deleted alarm from the local array\n        this.alarms = this.alarms.filter(a => a.id !== id);\n        console.log('Alarm deleted successfully');\n      }, error => {\n        console.error('Error deleting alarm:', error);\n        // Optionally, display an error message to the user\n      });\n    }\n  }\n}\n","<!-- <body>\n    <div *ngIf=\"alarms\">\n        <li *ngFor=\"let alarm of alarms\"></li>\n        <div class=\"row\">\n            <div class=\"column1\" style=\"background-color:#f7f4f4;\">\n                <h2>My Alarms</h2>\n                <p>Filter</p>\n\n\n                <li *ngFor=\"let alarm of alarms\">\n                    <div (click)=\"showDetails(alarm)\" class=\"button-table\">\n                        <div class=\"button-cell\">\n                            <div class=\"button-index\">P1</div>\n                            <div class=\"button-info\">\n                                <h2 class=\"button-name\">{{alarm.name}}</h2>\n                                <h4 class=\"button-subheading\">Downhole PT Tubing</h4>\n\n                            </div>\n                        </div>\n                    </div>\n\n                </li>\n\n            </div>\n            <div class=\"column2\" style=\"background-color:#cbcbcb52;\">\n                <h2 *ngFor=\"let alarm of alarms\">\n                    <div *ngIf=\"alarm.showDetails\">\n                        {{alarm.name}}</div>\n                </h2>\n                <p>Downhole PT Tubing</p>\n                <div class=\"row\">\n                    <div class=\"column1\" style=\" width: 70%; height: 750px;\">\n                        <div class=\"comp1\" style=\"background-color:#fff3ff; margin-left: 10px;   margin-bottom: 20px;\">\n                            <h2>Review and acknowledge the issue</h2>\n                            <p> 04/26/2022</p>\n                            A decrse in pressure required to inject into the resevior was found, falling below the expected range.\n                            <div class=\"comp1\" style=\"background-color: #b3ff002b; border-color: #020000; \">\n                                Hello\n                            </div>\n                        </div>\n                        <h5 style=\" margin-left: 10px;\">Previous Activity </h5>\n                        <div class=\"comp2\" style=\"background-color:#239c10;  margin-left: 10px; \"></div>\n                    </div>\n                    <div class=\"column1\" style=\" width: 28%;height: 750px;  margin-left: 10px; \">\n                        <div class=\"column2\" style=\"background-color:#ffffff; width: 100%; height: 450px;\">\n                            <div class=\"column2\" style=\"background-color:#adadad46; width: 100%; height: 48px; padding: 2px;\">\n                                <button class=\"delete-btn\" (click)=\"deleteAlarm(alarms.id)\">Delete</button>\n                                <button class=\"delete-btn\" (click)=\"deleteAlarm(alarms.id)\">Delete</button>\n                            </div>\n                            <ng-container *ngFor=\"let alarm of alarms\">\n                                <div *ngIf=\"alarm.showDetails\">\n                                    <table>\n                                        <tr>\n                                            <td>\n                                                <p>Issue Status: <span class=\"plain-text\">{{alarm.status}}</span></p>\n                                                <p>Issue ID: <span class=\"plain-text\"> {{alarm.id}} </span></p>\n                                                <p>Issue Type: <span class=\"plain-text\"> {{alarm.type}} </span></p>\n                                                <p>Phase: <span class=\"plain-text\"> {{alarm.phase}}  </span></p>\n                                                <p>Issue Level: <span class=\"plain-text\">{{alarm.level}} </span></p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <p>Storage Project: <span class=\"plain-text\">{{alarm.project}} </span></p>\n                                                <p>Well: <span class=\"plain-text\"> {{alarm.well}} </span></p>\n                                                <p>Service Provider: <span class=\"plain-text\"> {{alarm.sprovider}}  </span></p>\n\n\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <p>Total Depth: <span class=\"plain-text\">{{alarm.depth}}</span> </p>\n                                                <p>Injection Depth Range: <span class=\"plain-text\">{{alarm.indepth}}</span></p>\n                                                <p>Telecom Sys Status: <span class=\"plain-text\">{{alarm.systatus}}</span> </p>\n\n                                            </td>\n                                        </tr>\n\n\n                                    </table>\n                                </div>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n\n</body> -->\n\n    <!-- <body>\n        <div *ngIf=\"alarms\">\n            <li *ngFor=\"let alarm of alarms\"></li>\n            <div class=\"row\">\n                <div class=\"column1\" style=\"background-color:#f7f4f4;\">\n                    <h2>My Alarms</h2>\n                    <p>Filter</p>\n\n                    <li *ngFor=\"let alarm of alarms\">\n                        <div (click)=\"editAlarm(alarm)\" class=\"button-table\"> \n                            <div class=\"button-cell\">\n                                <div class=\"button-index\">P1</div>\n                                <div class=\"button-info\">\n                                    <h2 class=\"button-name\">{{ alarm.name }}</h2>\n                                    <h4 class=\"button-subheading\">Downhole PT Tubing</h4>\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n\n                </div>\n                <div class=\"column2\" style=\"background-color:#cbcbcb52;\">\n                    <h2 *ngFor=\"let alarm of alarms\">\n                        <div *ngIf=\"alarm === selectedAlarm\">\n                            {{ alarm.name }}\n                        </div>\n                    </h2>\n                    <p>Downhole PT Tubing</p>\n                    <div class=\"row\">\n                        <div class=\"column1\" style=\" width: 70%; height: 750px;\">\n                            <div class=\"comp1\" style=\"background-color:#fff3ff; margin-left: 10px; margin-bottom: 20px;\">\n                                <h2>Review and acknowledge the issue</h2>\n                                <p> 04/26/2022</p>\n                                A decrease in pressure required to inject into the reservoir was found, falling below the expected range.\n                                <img src=\"assets/ss1.jpg\" alt=\"SS1 Image\" style=\"width: 100%; height: 100%;\">\n                                <h5 style=\"margin-left: 10px;\">Previous Activity</h5> \n                                <img src=\"assets/ss2.jpg\" alt=\"SS1 Image\" style=\"width: 100%; height: 100%;\">\n                            </div>\n                        </div>\n                        <div class=\"column1\" style=\" width: 28%; height: 750px; margin-left: 10px;\">\n                            <div class=\"column2\" style=\"background-color:#ffffff; width: 100%; height: 450px;\">\n                                <div class=\"column2\" style=\"background-color:#adadad46; width: 100%; height: 48px; padding: 2px;\">\n                                    <button class=\"edit-btn\" (click)=\"editAlarm(selectedAlarm)\">\n                                        <span>Edit</span>\n                                    </button>\n                                    \n                                    <button class=\"delete-btn\" (click)=\"deleteAlarm(selectedAlarm?.id)\">\n                                        <span>Delete</span>\n                                    </button>\n                                    \n                                </div>\n                                <ng-container *ngIf=\"selectedAlarm\"> \n                                    <table>\n                                        <tr>\n                                            <td>\n                                                <p>Issue Status: <span class=\"plain-text\">{{ selectedAlarm.status }}</span></p>\n                                                <p>Issue ID: <span class=\"plain-text\">{{ selectedAlarm.id }}</span></p>\n                                                <p>Issue Type: <span class=\"plain-text\">{{ selectedAlarm.type }}</span></p>\n                                                <p>Phase: <span class=\"plain-text\">{{ selectedAlarm.phase }}</span></p>\n                                                <p>Issue Level: <span class=\"plain-text\">{{ selectedAlarm.level }}</span></p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <p>Storage Project: <span class=\"plain-text\">{{ selectedAlarm.project }}</span></p>\n                                                <p>Well: <span class=\"plain-text\">{{ selectedAlarm.well }}</span></p>\n                                                <p>Service Provider: <span class=\"plain-text\">{{ selectedAlarm.sprovider }}</span></p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <p>Total Depth: <span class=\"plain-text\">{{ selectedAlarm.depth }}</span></p>\n                                                <p>Injection Depth Range: <span class=\"plain-text\">{{ selectedAlarm.indepth }}</span></p>\n                                                <p>Telecom Sys Status: <span class=\"plain-text\">{{ selectedAlarm.systatus }}</span></p>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                </ng-container>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </body> -->\n    <!-- <body>\n        <div *ngIf=\"alarms\">\n            <li *ngFor=\"let alarm of alarms\"></li>\n            <div class=\"row\">\n                <div class=\"column1\" style=\"background-color:#f7f4f4;\">\n                    <h2>My Alarms</h2>\n                    <p>Filter</p>\n    \n                    <li *ngFor=\"let alarm of alarms\">\n                        <div (click)=\"editAlarm(alarm)\" class=\"button-table\"> \n                            <div class=\"button-cell\">\n                                <div class=\"button-index\">P1</div>\n                                <div class=\"button-info\">\n                                    <h2 class=\"button-name\">{{ alarm.name }}</h2>\n                                    <h4 class=\"button-subheading\">Downhole PT Tubing</h4>\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n    \n                </div>\n                <div class=\"column2\" style=\"background-color:#cbcbcb52;\">\n                    <h2 *ngFor=\"let alarm of alarms\">\n                        <div *ngIf=\"alarm === selectedAlarm\">\n                            {{ alarm.name }}\n                        </div>\n                    </h2>\n                    <p>Downhole PT Tubing</p>\n                    <div class=\"row\">\n                        <div class=\"column1\" style=\" width: 70%; height: 750px;\">\n                            <div class=\"comp1\" style=\"background-color:#fff3ff; margin-left: 10px; margin-bottom: 20px;\">\n                                <h2>Review and acknowledge the issue</h2>\n                                <p> 04/26/2022</p>\n                                A decrease in pressure required to inject into the reservoir was found, falling below the expected range.\n                                <img src=\"assets/ss1.jpg\" alt=\"SS1 Image\" style=\"width: 100%; height: 100%;\">\n                                <h5 style=\"margin-left: 10px;\">Previous Activity</h5> \n                                <img src=\"assets/ss2.jpg\" alt=\"SS1 Image\" style=\"width: 100%; height: 100%;\">\n                            </div>\n                        </div>\n                        <div class=\"column1\" style=\" width: 28%; height: 750px; margin-left: 10px;\">\n                            <div class=\"column2\" style=\"background-color:#ffffff; width: 100%; height: 450px;\">\n                                <div class=\"column2\" style=\"background-color:#adadad46; width: 100%; height: 48px; padding: 2px;\">\n                                    <button class=\"edit-btn\" (click)=\"editAlarm(selectedAlarm)\">\n                                        <span>Edit</span>\n                                    </button>\n                                    <button class=\"delete-btn\" (click)=\"deleteAlarm(selectedAlarm?.id)\">\n                                        <span>Delete</span>\n                                    </button>\n                                </div>\n                                <ng-container *ngIf=\"selectedAlarm\">\n                                    <div class=\"edit-form\">\n                                        <h2>Edit Alarm</h2>\n                                        <form (ngSubmit)=\"submitEditForm()\" #editForm=\"ngForm\">\n                                            <div>\n                                                <label for=\"name\">Name:</label>\n                                                <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"selectedAlarm.name\" required>\n                                            </div>\n                                            <div>\n                                                <label for=\"phase\">Phase:</label>\n                                                <input type=\"text\" id=\"phase\" name=\"phase\" [(ngModel)]=\"selectedAlarm.phase\" required>\n                                            </div>\n                                            <div>\n                                                <label for=\"well\">Well:</label>\n                                                <input type=\"text\" id=\"well\" name=\"well\" [(ngModel)]=\"selectedAlarm.well\" required>\n                                            </div>\n                                            <button type=\"submit\">Save</button>\n                                            <button type=\"button\" (click)=\"cancelEdit()\">Cancel</button>\n                                        </form>\n                                    </div>\n                                    <table>\n                                        <tr>\n                                            <td>\n                                                <p>Issue Status: <span class=\"plain-text\">{{ selectedAlarm.status }}</span></p>\n                                                <p>Issue ID: <span class=\"plain-text\">{{ selectedAlarm.id }}</span></p>\n                                                <p>Issue Type: <span class=\"plain-text\">{{ selectedAlarm.type }}</span></p>\n                                                <p>Phase: <span class=\"plain-text\">{{ selectedAlarm.phase }}</span></p>\n                                                <p>Issue Level: <span class=\"plain-text\">{{ selectedAlarm.level }}</span></p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <p>Storage Project: <span class=\"plain-text\">{{ selectedAlarm.project }}</span></p>\n                                                <p>Well: <span class=\"plain-text\">{{ selectedAlarm.well }}</span></p>\n                                                <p>Service Provider: <span class=\"plain-text\">{{ selectedAlarm.sprovider }}</span></p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <p>Total Depth: <span class=\"plain-text\">{{ selectedAlarm.depth }}</span></p>\n                                                <p>Injection Depth Range: <span class=\"plain-text\">{{ selectedAlarm.indepth }}</span></p>\n                                                <p>Telecom Sys Status: <span class=\"plain-text\">{{ selectedAlarm.systatus }}</span></p>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                </ng-container>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </body>\n     -->\n<!-- <body>\n    <div *ngIf=\"alarms\">\n        <li *ngFor=\"let alarm of alarms\"></li>\n        <div class=\"row\">\n            <div class=\"column1\" style=\"background-color:#f7f4f4;\">\n                <h2>My Alarms</h2>\n                <p>Filter</p>\n\n                <li *ngFor=\"let alarm of alarms\">\n                    <div (click)=\"editAlarm(alarm)\" class=\"button-table\"> \n                        <div class=\"button-cell\">\n                            <div class=\"button-index\">P1</div>\n                            <div class=\"button-info\">\n                                <h2 class=\"button-name\">{{ alarm.name }}</h2>\n                                <h4 class=\"button-subheading\">Downhole PT Tubing</h4>\n                            </div>\n                        </div>\n                    </div>\n                </li>\n\n            </div>\n            <div class=\"column2\" style=\"background-color:#cbcbcb52;\">\n                <h2 *ngFor=\"let alarm of alarms\">\n                    <div *ngIf=\"alarm === selectedAlarm\">\n                        {{ alarm.name }}\n                    </div>\n                </h2>\n                <p>Downhole PT Tubing</p>\n                <div class=\"row\">\n                    <div class=\"column1\" style=\" width: 70%; height: 750px;\">\n                        <div class=\"comp1\" style=\"background-color:#fff3ff; margin-left: 10px; margin-bottom: 20px;\">\n                            <h2>Review and acknowledge the issue</h2>\n                            <p> 04/26/2022</p>\n                            A decrease in pressure required to inject into the reservoir was found, falling below the expected range.\n                            <img src=\"assets/ss1.jpg\" alt=\"SS1 Image\" style=\"width: 100%; height: 100%;\">\n                            <h5 style=\"margin-left: 10px;\">Previous Activity</h5> \n                            <img src=\"assets/ss2.jpg\" alt=\"SS1 Image\" style=\"width: 100%; height: 100%;\">\n                        </div>\n                    </div>\n                    <div class=\"column1\" style=\" width: 28%; height: 750px; margin-left: 10px;\">\n                        <div class=\"column2\" style=\"background-color:#ffffff; width: 100%; height: 450px;\">\n                            <div class=\"column2\" style=\"background-color:#adadad46; width: 100%; height: 48px; padding: 2px;\">\n                                <button class=\"edit-btn\" (click)=\"toggleEditForm()\">\n                                    <span>Edit</span>\n                                </button>\n                                <button class=\"delete-btn\" (click)=\"deleteAlarm(selectedAlarm?.id)\">\n                                    <span>Delete</span>\n                                </button>\n                            </div>\n                            <ng-container *ngIf=\"selectedAlarm\">\n                                <div class=\"edit-form\" *ngIf=\"showEditForm\">\n                                    <h2>Edit Alarm</h2>\n                                    <form (ngSubmit)=\"submitEditForm()\" #editForm=\"ngForm\">\n                                        <div>\n                                            <label for=\"name\">Name:</label>\n                                            <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"selectedAlarm.name\" required>\n                                        </div>\n                                        <div>\n                                            <label for=\"phase\">Phase:</label>\n                                            <input type=\"text\" id=\"phase\" name=\"phase\" [(ngModel)]=\"selectedAlarm.phase\" required>\n                                        </div>\n                                        <div>\n                                            <label for=\"well\">Well:</label>\n                                            <input type=\"text\" id=\"well\" name=\"well\" [(ngModel)]=\"selectedAlarm.well\" required>\n                                        </div>\n                                        <button type=\"submit\">Save</button>\n                                        <button type=\"button\" (click)=\"cancelEdit()\">Cancel</button>\n                                    </form>\n                                </div>\n                                <table *ngIf=\"!showEditForm\">\n                                    <tr>\n                                        <td>\n                                            <p>Issue Status: <span class=\"plain-text\">Inactive</span></p>\n                                            <p>Issue ID: <span class=\"plain-text\">{{ selectedAlarm.id }}</span></p>\n                                            <p>Issue Type: <span class=\"plain-text\">{{ selectedAlarm.type }}</span></p>\n                                            <p>Phase: <span class=\"plain-text\">{{ selectedAlarm.phase }}</span></p>\n                                            <p>Issue Level: <span class=\"plain-text\">{{ selectedAlarm.level }}</span></p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <p>Storage Project: <span class=\"plain-text\">{{ selectedAlarm.project }}</span></p>\n                                            <p>Well: <span class=\"plain-text\">{{ selectedAlarm.well }}</span></p>\n                                            <p>Service Provider: <span class=\"plain-text\">{{ selectedAlarm.sprovider }}</span></p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <p>Total Depth: <span class=\"plain-text\">{{ selectedAlarm.depth }}</span></p>\n                                            <p>Injection Depth Range: <span class=\"plain-text\">{{ selectedAlarm.indepth }}</span></p>\n                                            <p>Telecom Sys Status: <span class=\"plain-text\">{{ selectedAlarm.systatus }}</span></p>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</body> -->\n<body>\n    <div *ngIf=\"alarms\">\n        <div class=\"row\">\n            <div class=\"column1\">\n                <h2>My Alarms</h2>\n                <p>Filter</p>\n\n                <div *ngFor=\"let alarm of alarms\" (click)=\"editAlarm(alarm)\" class=\"button-table\">\n                    <div class=\"button-cell\">\n                        <div class=\"button-index\">P1</div>\n                        <div class=\"button-info\">\n                            <h2 class=\"button-name\">{{ alarm.name }}</h2>\n                            <h4 class=\"button-subheading\">Downhole PT Tubing</h4>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"column2\">\n                <h2>{{ selectedAlarm?.name }}</h2>\n                <p>Downhole PT Tubing</p>\n                <div class=\"comp1\">\n                    <h2>Review and acknowledge the issue</h2>\n                    <p>04/26/2022</p>\n                    A decrease in pressure required to inject into the reservoir was found, falling below the expected range.\n                    <img src=\"assets/ss1.jpg\" alt=\"SS1 Image\">\n                    <h5>Previous Activity</h5> \n                    <img src=\"assets/ss2.jpg\" alt=\"SS1 Image\">\n                </div>\n                <div class=\"comp2\">\n                    <div class=\"column2\">\n                        <div class=\"topright\">\n                            <button class=\"edit-btn\" (click)=\"toggleEditForm()\">\n                                <span>Edit</span>\n                            </button>\n                            <button class=\"delete-btn\" (click)=\"deleteAlarm(selectedAlarm?.id)\">\n                                <span>Delete</span>\n                            </button>\n                        </div>\n                        <ng-container *ngIf=\"selectedAlarm\">\n                            <div class=\"edit-form\" *ngIf=\"showEditForm\">\n                                <h2>Edit Alarm</h2>\n                                <form (ngSubmit)=\"submitEditForm()\" #editForm=\"ngForm\">\n                                    <div>\n                                        <label for=\"name\">Name:</label>\n                                        <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"selectedAlarm.name\" required>\n                                    </div>\n                                    <div>\n                                        <label for=\"phase\">Phase:</label>\n                                        <input type=\"text\" id=\"phase\" name=\"phase\" [(ngModel)]=\"selectedAlarm.phase\" required>\n                                    </div>\n                                    <div>\n                                        <label for=\"well\">Well:</label>\n                                        <input type=\"text\" id=\"well\" name=\"well\" [(ngModel)]=\"selectedAlarm.well\" required>\n                                    </div>\n                                    <button type=\"submit\">Save</button>\n                                    <button type=\"button\" (click)=\"cancelEdit()\">Cancel</button>\n                                </form>\n                            </div>\n                            <table *ngIf=\"!showEditForm\">\n                                <tr>\n                                    <td>\n                                        <p>Issue Status: <span class=\"plain-text\">Inactive</span></p>\n                                        <p>Issue ID: <span class=\"plain-text\">{{ selectedAlarm.id }}</span></p>\n                                        <p>Issue Type: <span class=\"plain-text\">{{ selectedAlarm.type }}</span></p>\n                                        <p>Phase: <span class=\"plain-text\">{{ selectedAlarm.phase }}</span></p>\n                                        <p>Issue Level: <span class=\"plain-text\">{{ selectedAlarm.level }}</span></p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <p>Storage Project: <span class=\"plain-text\">{{ selectedAlarm.project }}</span></p>\n                                        <p>Well: <span class=\"plain-text\">{{ selectedAlarm.well }}</span></p>\n                                        <p>Service Provider: <span class=\"plain-text\">{{ selectedAlarm.sprovider }}</span></p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <p>Total Depth: <span class=\"plain-text\">{{ selectedAlarm.depth }}</span></p>\n                                        <p>Injection Depth Range: <span class=\"plain-text\">{{ selectedAlarm.indepth }}</span></p>\n                                        <p>Telecom Sys Status: <span class=\"plain-text\">{{ selectedAlarm.systatus }}</span></p>\n                                    </td>\n                                </tr>\n                            </table>\n                        </ng-container>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}